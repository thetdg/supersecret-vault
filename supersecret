#!/bin/bash
# A vault for storing encrypted files
# Author: Tanmoy Dasgupta (https://github.com/thetdg)

# Creating a vault directory to watch
if [ $# -eq 1 ]; then
    folder_name=$1
    mkdir $folder_name
    if [ $? -eq 0 ]; then
        echo "Creating vault at '$folder_name'."
    fi
elif [ $# -eq 0 ]; then
    folder_name="supersecret_vault"
    mkdir $folder_name    
    echo "No path is provided. Creating vault '$folder_name' in the current directory."
elif [ $# -gt 1 ]; then
    printf "Invalid syntax.\nPass in a directory name or run the programme without any argument to create a default vault directory.\n"
    exit 1
fi

# Password
IFS= read -s  -p "Enter a password for the valut": password

echo
echo "Put the files you want to encrypt in the vault."
echo "Press:"
echo "E to encrypt the unencrypted files in the vault (and keep the unencrypted originals)"
echo "R to (re)encrypt the unencrypted files in the vault (and keep the unencrypted originals)"
echo "Q to quit"

while true; do
    echo
    printf "Waiting for input: "
    read input
        if [[ $input = "E" ]] || [[ $input = "R" ]]; then
            echo 
            # work on regular files ONLY
            for file_name in $(ls -la $folder_name | grep ^- | awk '{print $9}'); do
                full_file_loc=$folder_name/$file_name
                # to determine if the file is already encrypted
                file_type=$(file -b $full_file_loc | awk '{print $1}')
                if [[ $file_type != 'GPG' ]]; then
                    if [ $input = "R" ]; then
                        rm $full_file_loc.gpg 
                        echo "Removed old encrypted file $full_file_loc.gpg"
                    fi
                    # Do the actual encryption
                    echo $password | gpg --batch -c --compress-algo none --passphrase-fd 0 $full_file_loc
                    if [ $? -eq 0 ]; then
                        echo "Encrypted $full_file_loc to $full_file_loc.gpg"
                    fi
                echo 
                fi
            done
            echo Done
        fi

        if [[ $input = "Q" ]] || [[ $input = "q" ]]; then
            echo "Quitting gracefully..."
            exit 0
        fi
done


# # Watchig
# inotifywait -m $folder_name -e create -e moved_to -e modify -e delete -e delete_self |
#    while read path action file; do
#        echo "$file -> '$action'"
#    done
